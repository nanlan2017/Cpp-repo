#ifndef h_controls
#define h_controls

#include "prelude.h"
#include "10-5_Factorial.h"
#include "10-10_cons_list.h"

//!  一个类型可以看作是数据的封装（因为它里面还可以定义成员整型数据、成员类型）
//!  一个类型本身当然也是一个数据。
//！           跟Haskell的data 参数化类型 一样嘛？？？

/*

data Tree a = Empty | Node a (Tree a) (Tree a)
data Shape = Circle Float Float Float | Rectangle Float Float Float Float 
*/
//   
#endif

